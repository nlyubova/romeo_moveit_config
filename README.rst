romeo_moveit_config
===================

This is a MoveIt! config package generated by the MoveIt! wizard.
It requires a ROMEO model which you can get from here:

https://github.com/ros-aldebaran/romeo_robot/tree/master/romeo_description
or from the binary package : ros-indigo-romeo-description

The moveit package must be run on a remote computer and not directly on your robot.

1 Compile the package
=====================

romeo_moveit_config package doesn't need any compilation, so running rospack profile should be enough.

For the dcm packages you need to compile the C++ nodes.  In order to compile romeo_dcm packages, you need to set the environment variable AL_DIR to the path to NAOqiSDK-c++ on your computer.

Then you can run the usual 

.. code-block:: bash

    catkin_make

And your ready to play with your romeo

2 Run MoveIt
============

Without a robot
-------------
You can run this moveit package either unconnected to any robot or attached to a robot (real or simulated):
For a standalone execution :

.. code-block:: bash

    roslaunch romeo_moveit_config demo.launch

Once launching the demo, you should see Romeo in MoveIt! GUI like this:

.. image:: tuto/moveit_launch.png
   :width: 100%

On a real ROMEO
---------------
To use MoveIt! on a real robot, you need to instanciate ROS controllers on your Romeo.
To do so, you need:
   - romeo_dcm_bringup (https://github.com/ros-aldebaran/romeo_dcm_robot)
   - romeo_control (https://github.com/ros-aldebaran/romeo_virtual)

First, set NAO_IP environment variable to your robot's IP address:

.. code-block:: bash

    export NAO_IP=<YOUR_ROBOT_IP>

Launch the DCM bringup:

.. code-block:: bash

    roslaunch romeo_dcm_bringup romeo_dcm_bringup_remote.launch

Wait until it is ready, then run:

.. code-block:: bash

    roslaunch romeo_moveit_config moveit_planner.launch


On a simulated robot (in Gazebo)
------------------------------
To use MoveIt! with Gazebo simulation, you need:
   - romeo_dcm_bringup (https://github.com/ros-aldebaran/romeo_dcm_robot)
   - romeo_control (https://github.com/ros-aldebaran/romeo_virtual)
   - romeo_gazebo_plugin (https://github.com/ros-aldebaran/romeo_virtual)

Launch Gazebo, like this:

.. code-block:: bash

    roslaunch romeo_gazebo_plugin romeo_gazebo_plugin_H37.launch

Wait until it is ready, then click on the Play button in Gazebo.

Finally, start MoveIt!:

.. code-block:: bash

    roslaunch romeo_moveit_config moveit_planner.launch


3 Use Moveit:
=============
RVIZ has been open: you can see that a MotionPlanning plugin has been launched.
First check the box "Allow approximate IK Solutions" on the bottom of the left control panel.
Then, go to the Planning tab.

Select which part of the robot you want to move:
In the plugin list on the upper part of the left column, you can select a group under MotionPlanning/Planning Request/Planning Group 


Now you can define your motion by drag and dropping the interactive markers.
You can compute a trajectory by clicking the 'planning' button 
Once the motion is satisfying you can try it on your real robot using 'execute' or 'plan and execute'.

NOTE: The start state is not updated automatically, you have to go to 'Select Start State' select 'Current' and click 'Update'. 
